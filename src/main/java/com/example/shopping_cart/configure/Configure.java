//package com.example.shopping_cart.configure;
//
//
//import com.example.shopping_cart.service_impl.UserServiceImpl;
//import com.example.shopping_cart.util.Constants;
//import org.modelmapper.ModelMapper;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.context.annotation.Bean;
//import org.springframework.context.annotation.Configuration;
//import org.springframework.security.authentication.AuthenticationManager;
//import org.springframework.security.config.Customizer;
//import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
//import org.springframework.security.config.annotation.web.builders.HttpSecurity;
//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
//import org.springframework.security.crypto.password.PasswordEncoder;
//import org.springframework.security.web.SecurityFilterChain;
//
//@Configuration
//
//public class Configure {
//
//    @Autowired
//    UserServiceImpl userService;
//
//    @Bean
//    public ModelMapper modelMapper() {
//
//        return new ModelMapper();
//    }
//
//    @Bean
//    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
//        http
//                .csrf(csrf -> csrf.disable()) // CSRF ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§¨‡§Ç‡§¶ ‡§ï‡§∞ ‡§¶‡•Ä ‡§ó‡§à ‡§π‡•à (REST API ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ï‡•ç‡§∏‡§∞ disable ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç)
//                .authorizeHttpRequests(auth -> auth // ‡§π‡§Æ ‡§Ö‡§¨ ‡§Ø‡§π ‡§§‡§Ø ‡§ï‡§∞‡§®‡•á ‡§ú‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§ï‡•å‡§®-‡§∏‡•Ä URL ‡§™‡§∞ ‡§ï‡•å‡§® ‡§è‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
//                        .requestMatchers("/public/**").permitAll() // /public/** ‡§∞‡•Ç‡§ü ‡§ï‡•ã ‡§¨‡§ø‡§®‡§æ ‡§≤‡•â‡§ó‡§ø‡§® ‡§è‡§ï‡•ç‡§∏‡•á‡§∏ ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§π‡•à
//                        .requestMatchers("/admin/**").hasRole(Constants.ROLE_ADMIN)
//                        .anyRequest().authenticated() // ‡§¨‡§æ‡§ï‡•Ä ‡§∏‡§≠‡•Ä ‡§∞‡•Ç‡§ü‡•ç‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è Authentication ‡§ú‡§º‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à
//                )
//                .httpBasic(Customizer.withDefaults()); // Basic Authentication (Username & Password) enable ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à
//
//        return http.build(); // ‡§∏‡§ø‡§ï‡•ç‡§Ø‡•ã‡§∞‡§ø‡§ü‡•Ä ‡§ö‡•á‡§® ‡§ï‡•ã ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡§ï‡•á ‡§∞‡§ø‡§ü‡§∞‡•ç‡§® ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç
//    }
//
//    // ‡§Ø‡§π method ‡§è‡§ï AuthenticationManager Bean ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•ã authenticate ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ú‡§º‡§ø‡§Æ‡•ç‡§Æ‡•á‡§¶‡§æ‡§∞ ‡§π‡•ã‡§§‡§æ ‡§π‡•à
//    @Bean
//    public AuthenticationManager authManager(HttpSecurity http) throws Exception {
//
//        AuthenticationManagerBuilder authBuilder = http.getSharedObject(AuthenticationManagerBuilder.class); // ‡§Ø‡§π ‡§≤‡§æ‡§á‡§® Spring Security ‡§ï‡•ã authentication ‡§ï‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§¨‡§§‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è first step ‡§π‡•à‡•§
//        authBuilder
//                .userDetailsService(userService) // ‡§Ø‡§π ‡§¨‡§§‡§æ‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§°‡§ø‡§ü‡•á‡§≤‡•ç‡§∏ ‡§ï‡§π‡§æ‡§Ç ‡§∏‡•á ‡§Ü‡§è‡§Ç‡§ó‡•Ä (UserServiceImpl)
//                .passwordEncoder(passwordEncoder()); // ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§ï‡•ã verify ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•å‡§®-‡§∏‡§æ encoder ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§π‡•ã‡§ó‡§æ
//        return   authBuilder.build(); // ‡§ä‡§™‡§∞ ‡§¶‡§ø‡§è ‡§ó‡§è config ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ AuthenticationManager ‡§ï‡•ã build ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç
//    }
//
//    // ‡§Ø‡§π method ‡§è‡§ï PasswordEncoder Bean return ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡•ã BCrypt ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡§æ ‡§π‡•à
//    @Bean
//    public PasswordEncoder passwordEncoder() {
//        return new BCryptPasswordEncoder(); // BCrypt ‡§è‡§ï ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ hashing algorithm ‡§π‡•à ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§ï‡•ã encrypt ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
//    }
//
//}
//
//
//
//
//
//
//
//
//
//
//
//
////        üîê CSRF ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à? (Simple ‡§∂‡§¨‡•ç‡§¶‡•ã‡§Ç ‡§Æ‡•á‡§Ç)
////        CSRF ‡§Æ‡§§‡§≤‡§¨ ‡§π‡•à: Cross-Site Request Forgery
////        ‡§Ø‡•á ‡§è‡§ï ‡§§‡§∞‡§π ‡§ï‡§æ ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§™‡§∞ ‡§π‡§Æ‡§≤‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
////
////        ‡§∏‡•ã‡§ö‡§ø‡§è ‡§Ü‡§™ ‡§è‡§ï ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü (‡§ú‡•à‡§∏‡•á ‡§¨‡•à‡§Ç‡§ï ‡§ï‡•Ä ‡§∏‡§æ‡§á‡§ü) ‡§™‡§∞ ‡§≤‡•â‡§ó‡§ø‡§® ‡§π‡•à‡§Ç‡•§ ‡§Ö‡§¨ ‡§Ö‡§ó‡§∞ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡•Ä ‡§ó‡§≤‡§§ ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç,
////        ‡§§‡•ã ‡§µ‡•ã ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§Ü‡§™‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ ‡§¨‡•à‡§Ç‡§ï ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§ï‡•Å‡§õ ‡§ó‡§≤‡§§ ‡§ï‡§æ‡§Æ (‡§ú‡•à‡§∏‡•á ‡§™‡•à‡§∏‡•á ‡§ü‡•ç‡§∞‡§æ‡§Ç‡§∏‡§´‡§∞) ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à‡•§
////        ‡§á‡§∏‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü‡•á‡§Ç ‡§è‡§ï ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§≤‡§ó‡§æ‡§§‡•Ä ‡§π‡•à‡§Ç ‡§ú‡§ø‡§∏‡•á ‡§ï‡§π‡§§‡•á ‡§π‡•à‡§Ç CSRF ‡§™‡•ç‡§∞‡•ã‡§ü‡•á‡§ï‡•ç‡§∂‡§®‡•§